@using Krg.Domain
@using Krg.Web.Extensions
@model Krg.Website.Models.EventsViewModel
<div class="row">
    <div>
        <h1>Event overview</h1>
    </div>
    <div class="row">
        @using (Html.BeginForm("Create", "Events", FormMethod.Post, new { area = "Admin", @class = "row g-3" }))
        {
            <div class="col">
                @Html.AntiForgeryToken()
                <div class="mb-3 row">
                    @Html.Label("Date", "Date", new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.TextBox("Date", Model.SelectedDate.ToString("yyyy-MM-dd"), new { @class = "form-control", type = "date", placeholder = @DateTime.Now.Year, data_val = "true", @data_val_required = "Ã…r skal angives", autocomplete = "on" })
                    </div>
                </div>
                <div class="mb-3 row">
                    @Html.Label("ContactName", "Name", new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.TextBox("ContactName", $"{Constants.FallBackContactName}", new { @class = "form-control", type = "text", placeholder = "Name", data_val = "true", @data_val_required = "Navn skal angives", autocomplete = "on" })
                    </div>
                </div>
                <div class="mb-3 row">
                    @Html.Label("ContactPhoneNo", "Phone", new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.TextBox("ContactPhoneNo", $"{Constants.FallBackContactPhoneNo}", new { @class = "form-control", type = "phone", placeholder = "Phone no", data_val = "true", @data_val_required = "Telefon skal angives", autocomplete = "on" })
                    </div>
                </div>
                <div class="mb-3 row">
                    @Html.Label("ContactEmail", "Email", new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.TextBox("ContactEmail", $"{Constants.FallBackContactEmail}", new { @class = "form-control", type = "email", placeholder = "Email", data_val = "true", @data_val_required = "Email skal angives", autocomplete = "on" })
                    </div>
                </div>
                <div class="mb-3 row">
                    <div>
                        <input type="submit" class="btn btn-outline-secondary float-end" value="Create"/>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Nav tabs -->
    <div class="row">
        <div class="col">
            <ul class="nav nav-tabs" id="myTab" role="tablist">
                @for (int i = 0; i < Model.Events.Keys.Count; i++)
                {
                    <li class="nav-item" role="presentation">
                        <button class="nav-link @(i == 0 ? "active" : "")" id="@(Model.Events.ElementAt(i).Key)-tab" data-bs-toggle="tab" data-bs-target="#@(Model.Events.ElementAt(i).Key)" type="button" role="tab" aria-controls="@(Model.Events.ElementAt(i).Key)" aria-selected="true">@(Model.Events.ElementAt(i).Key)</button>
                    </li>
                }
            </ul>
        </div>
    </div>
    <!-- Tab panes -->
    <div class="tab-content">
        @for (int i = 0; i < Model.Events.Count; i++)
        {
            <div class="tab-pane @(i == 0 ? "active" : "")" id="@(Model.Events.ElementAt(i).Key)" role="tabpanel" aria-labelledby="@(Model.Events.ElementAt(i).Key)-tab" tabindex="0">
                <div class="row">
                    @foreach (var dateElm in Model.Events.ElementAt(i).Value)
                    {
                        <div class="col-sm-3 p-2">
                            <div class="card">
                                <div class="card-body">
                                    <h5 class="card-title">@dateElm.Date.ToDkDate()</h5>
                                    <p class="card-text">
                                        <div class="row">
                                            <label for="staticName-@dateElm.Date.ToDkDate()" class="col-sm-2 col-form-label">Name</label>
                                            <div class="col-sm-10">
                                                <input type="text" readonly class="form-control-plaintext" id="staticName-@dateElm.Date.ToDkDate()" value="@dateElm.ContactName">
                                            </div>
                                        </div>
                                        <div class="row">
                                            <label for="staticPhone-@dateElm.Date.ToDkDate()" class="col-sm-2 col-form-label">Phone</label>
                                            <div class="col-sm-10">
                                                <input type="text" readonly class="form-control-plaintext" id="staticPhone-@dateElm.Date" value="@dateElm.ContactPhone">
                                            </div>
                                        </div>
                                        <div class="row">
                                            <label for="staticEmail-@dateElm.Date.ToDkDate()" class="col-sm-2 col-form-label">Email</label>
                                            <div class="col-sm-10">
                                                <input type="text" readonly class="form-control-plaintext" id="staticEmail-@dateElm.Date.ToDkDate()" value="@dateElm.ContactEmail">
                                            </div>
                                        </div>
                                    </p>
                                    @Html.ActionLink("Edit", "Edit", "Events", new { id = dateElm.Id, tab = Model.Events.ElementAt(i).Key }, new { @class = "btn btn-outline-success" })
                                    @Html.ActionLink("Delete", "Delete", "Events", new { id = dateElm.Id }, new { @class = "btn btn-outline-danger", onclick="return confirm('Are you sure you want to delete this event?')"})
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>
